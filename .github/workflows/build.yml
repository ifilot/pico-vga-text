name: build

on:
  push:
    branches: [ "master", "develop" ]
    tags:
    - 'v*'
  pull_request:
    branches: [ "master", "develop" ]

jobs:
  #
  # (optional) Create release
  #
  create-release:
    runs-on: ubuntu-latest
    permissions: write-all
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}

  #
  # PICO2 firmware
  #
  build-firmware-pico2:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/ifilot/pico:v0.2.0
    steps:
    - uses: actions/checkout@v3
    - name: Compile firmware
      shell: bash
      run: |
        mkdir build && cd build
        cmake -DPICO_PLATFORM=rp2350-arm-s -DPICO_BOARD=pico2 ../src
        make -j
        cp -v ${{env.FIRMWARE}}.uf2 ${{env.FIRMWARE2}}.uf2
    - name: Upload firmware .uf2 file
      uses: actions/upload-artifact@v4
      with:
        name: ${{env.FIRMWARE2}}.uf2
        path: ./build/${{env.FIRMWARE2}}.uf2

  deploy-firmware-pico2:
    runs-on: ubuntu-latest
    needs: [build-firmware-pico2, create-release]
    permissions: write-all
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
    - name: Download artifact
      uses: actions/download-artifact@v4
      with:
        name: ${{env.FIRMWARE2}}.uf2
        path: ./
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.upload_url }}
        asset_path: ${{env.FIRMWARE2}}.uf2
        asset_name: ${{env.FIRMWARE2}}.uf2
        asset_content_type: application/octet-stream